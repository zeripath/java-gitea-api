/*
 * Gitea API.
 * This documentation describes the Gitea API.
 *
 * OpenAPI spec version: 1.18.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.gitea.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * IssueFormField represents a form field
 */
@ApiModel(description = "IssueFormField represents a form field")

public class IssueFormField {
  @SerializedName("attributes")
  private Map<String, Object> attributes = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("type")
  private String type = null;

  @SerializedName("validations")
  private Map<String, Object> validations = null;

  public IssueFormField attributes(Map<String, Object> attributes) {
    this.attributes = attributes;
    return this;
  }

  public IssueFormField putAttributesItem(String key, Object attributesItem) {
    if (this.attributes == null) {
      this.attributes = new HashMap<String, Object>();
    }
    this.attributes.put(key, attributesItem);
    return this;
  }

   /**
   * Get attributes
   * @return attributes
  **/
  @ApiModelProperty(value = "")
  public Map<String, Object> getAttributes() {
    return attributes;
  }

  public void setAttributes(Map<String, Object> attributes) {
    this.attributes = attributes;
  }

  public IssueFormField id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public IssueFormField type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(value = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public IssueFormField validations(Map<String, Object> validations) {
    this.validations = validations;
    return this;
  }

  public IssueFormField putValidationsItem(String key, Object validationsItem) {
    if (this.validations == null) {
      this.validations = new HashMap<String, Object>();
    }
    this.validations.put(key, validationsItem);
    return this;
  }

   /**
   * Get validations
   * @return validations
  **/
  @ApiModelProperty(value = "")
  public Map<String, Object> getValidations() {
    return validations;
  }

  public void setValidations(Map<String, Object> validations) {
    this.validations = validations;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IssueFormField issueFormField = (IssueFormField) o;
    return Objects.equals(this.attributes, issueFormField.attributes) &&
        Objects.equals(this.id, issueFormField.id) &&
        Objects.equals(this.type, issueFormField.type) &&
        Objects.equals(this.validations, issueFormField.validations);
  }

  @Override
  public int hashCode() {
    return Objects.hash(attributes, id, type, validations);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IssueFormField {\n");
    
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    validations: ").append(toIndentedString(validations)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

