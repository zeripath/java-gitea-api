/*
 * Gitea API.
 * This documentation describes the Gitea API.
 *
 * OpenAPI spec version: 1.18.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.gitea.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * CreateBranchRepoOption options when creating a branch in a repository
 */
@ApiModel(description = "CreateBranchRepoOption options when creating a branch in a repository")

public class CreateBranchRepoOption {
  @SerializedName("new_branch_name")
  private String newBranchName = null;

  @SerializedName("old_branch_name")
  private String oldBranchName = null;

  public CreateBranchRepoOption newBranchName(String newBranchName) {
    this.newBranchName = newBranchName;
    return this;
  }

   /**
   * Name of the branch to create
   * @return newBranchName
  **/
  @ApiModelProperty(required = true, value = "Name of the branch to create")
  public String getNewBranchName() {
    return newBranchName;
  }

  public void setNewBranchName(String newBranchName) {
    this.newBranchName = newBranchName;
  }

  public CreateBranchRepoOption oldBranchName(String oldBranchName) {
    this.oldBranchName = oldBranchName;
    return this;
  }

   /**
   * Name of the old branch to create from
   * @return oldBranchName
  **/
  @ApiModelProperty(value = "Name of the old branch to create from")
  public String getOldBranchName() {
    return oldBranchName;
  }

  public void setOldBranchName(String oldBranchName) {
    this.oldBranchName = oldBranchName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateBranchRepoOption createBranchRepoOption = (CreateBranchRepoOption) o;
    return Objects.equals(this.newBranchName, createBranchRepoOption.newBranchName) &&
        Objects.equals(this.oldBranchName, createBranchRepoOption.oldBranchName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(newBranchName, oldBranchName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateBranchRepoOption {\n");
    
    sb.append("    newBranchName: ").append(toIndentedString(newBranchName)).append("\n");
    sb.append("    oldBranchName: ").append(toIndentedString(oldBranchName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

